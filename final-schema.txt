-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  freelancer_id uuid,
  job_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT conversations_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.users(id),
  CONSTRAINT conversations_freelancer_id_fkey FOREIGN KEY (freelancer_id) REFERENCES public.users(id)
);
CREATE TABLE public.freelancer_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  bio text,
  experience_years integer,
  service_areas ARRAY,
  hourly_rate_min numeric,
  hourly_rate_max numeric,
  certifications ARRAY,
  documents jsonb,
  approval_status text DEFAULT 'pending'::text CHECK (approval_status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  admin_notes text,
  coverage_areas ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  feedback text,
  reviewed_at timestamp with time zone,
  reviewed_by uuid,
  portfolio_urls ARRAY,
  work_samples jsonb,
  client_references jsonb,
  availability_schedule jsonb,
  preferred_communication ARRAY,
  languages_spoken ARRAY,
  equipment_owned ARRAY,
  transportation_available boolean DEFAULT false,
  insurance_coverage boolean DEFAULT false,
  business_license text,
  tax_id text,
  bank_account_details jsonb,
  payment_preferences jsonb,
  response_time_hours integer DEFAULT 24,
  completion_rate numeric DEFAULT 0.00,
  average_rating numeric DEFAULT 0.00,
  total_jobs_completed integer DEFAULT 0,
  total_earnings numeric DEFAULT 0.00,
  profile_views integer DEFAULT 0,
  last_profile_update timestamp with time zone DEFAULT now(),
  CONSTRAINT freelancer_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT freelancer_profiles_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES public.users(id),
  CONSTRAINT freelancer_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.job_applications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid,
  freelancer_id uuid,
  proposed_rate numeric NOT NULL,
  application_timestamp timestamp with time zone DEFAULT now(),
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'rejected'::text])),
  feedback text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT job_applications_pkey PRIMARY KEY (id),
  CONSTRAINT job_applications_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id),
  CONSTRAINT job_applications_freelancer_id_fkey FOREIGN KEY (freelancer_id) REFERENCES public.users(id)
);
CREATE TABLE public.jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid,
  title text NOT NULL,
  description text NOT NULL,
  location text NOT NULL,
  status text DEFAULT 'posted'::text CHECK (status = ANY (ARRAY['posted'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])),
  timeline text,
  created_at timestamp with time zone DEFAULT now(),
  completion_date timestamp with time zone,
  archive_date timestamp with time zone,
  CONSTRAINT jobs_pkey PRIMARY KEY (id),
  CONSTRAINT jobs_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.users(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  sender_id uuid,
  content text NOT NULL,
  message_type text DEFAULT 'text'::text CHECK (message_type = ANY (ARRAY['text'::text, 'file'::text, 'image'::text])),
  file_url text,
  file_name text,
  file_size integer,
  is_read boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.messages_backup (
  id uuid,
  job_id uuid,
  sender_id uuid,
  receiver_id uuid,
  content text,
  timestamp timestamp with time zone,
  read_status boolean
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  type text NOT NULL CHECK (type = ANY (ARRAY['job_posted'::text, 'job_application'::text, 'application_approved'::text, 'application_rejected'::text, 'job_completed'::text, 'payment_received'::text, 'message_received'::text])),
  title text NOT NULL,
  message text NOT NULL,
  data jsonb,
  read_status boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  read_at timestamp with time zone,
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  reporter_id uuid,
  reported_user_id uuid,
  description text NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  admin_approval boolean DEFAULT false,
  status text DEFAULT 'open'::text CHECK (status = ANY (ARRAY['open'::text, 'in_review'::text, 'resolved'::text, 'dismissed'::text])),
  CONSTRAINT reports_pkey PRIMARY KEY (id),
  CONSTRAINT reports_reported_user_id_fkey FOREIGN KEY (reported_user_id) REFERENCES public.users(id),
  CONSTRAINT reports_reporter_id_fkey FOREIGN KEY (reporter_id) REFERENCES public.users(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid,
  reviewer_id uuid,
  reviewed_id uuid,
  rating integer CHECK (rating >= 1 AND rating <= 5),
  comment text,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.users(id),
  CONSTRAINT reviews_reviewed_id_fkey FOREIGN KEY (reviewed_id) REFERENCES public.users(id),
  CONSTRAINT reviews_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.skills_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  description text,
  parent_category_id uuid,
  icon_url text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skills_categories_pkey PRIMARY KEY (id),
  CONSTRAINT skills_categories_parent_category_id_fkey FOREIGN KEY (parent_category_id) REFERENCES public.skills_categories(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  job_id uuid,
  client_id uuid,
  freelancer_id uuid,
  amount numeric NOT NULL,
  payment_status text DEFAULT 'pending'::text CHECK (payment_status = ANY (ARRAY['pending'::text, 'completed'::text, 'refunded'::text, 'disputed'::text])),
  payment_date timestamp with time zone,
  payment_reference text,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_freelancer_id_fkey FOREIGN KEY (freelancer_id) REFERENCES public.users(id),
  CONSTRAINT transactions_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.users(id),
  CONSTRAINT transactions_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.jobs(id)
);
CREATE TABLE public.user_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  event_type text NOT NULL,
  event_data jsonb,
  page_visited text,
  session_duration integer,
  device_type text,
  browser_info text,
  ip_address inet,
  user_agent text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_analytics_pkey PRIMARY KEY (id),
  CONSTRAINT user_analytics_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_location_history (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  latitude numeric NOT NULL,
  longitude numeric NOT NULL,
  address text,
  city text,
  state_province text,
  country text,
  accuracy_radius integer,
  location_source text CHECK (location_source = ANY (ARRAY['gps'::text, 'manual'::text, 'ip'::text, 'other'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_location_history_pkey PRIMARY KEY (id),
  CONSTRAINT user_location_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  notification_email boolean DEFAULT true,
  notification_sms boolean DEFAULT false,
  notification_push boolean DEFAULT true,
  marketing_emails boolean DEFAULT false,
  profile_visibility text DEFAULT 'public'::text CHECK (profile_visibility = ANY (ARRAY['public'::text, 'freelancers_only'::text, 'private'::text])),
  show_location boolean DEFAULT true,
  show_contact_info boolean DEFAULT true,
  auto_accept_jobs boolean DEFAULT false,
  max_job_distance integer DEFAULT 50,
  preferred_job_types ARRAY,
  working_hours jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT user_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.user_skills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  skill_id uuid,
  proficiency_level text DEFAULT 'intermediate'::text CHECK (proficiency_level = ANY (ARRAY['beginner'::text, 'intermediate'::text, 'advanced'::text, 'expert'::text])),
  years_experience integer DEFAULT 0,
  is_verified boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_skills_pkey PRIMARY KEY (id),
  CONSTRAINT user_skills_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills_categories(id),
  CONSTRAINT user_skills_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  google_id text NOT NULL UNIQUE,
  email text NOT NULL UNIQUE,
  phone text NOT NULL,
  address text NOT NULL,
  role text DEFAULT 'client'::text CHECK (role = ANY (ARRAY['client'::text, 'freelancer'::text, 'admin'::text])),
  admin_status boolean DEFAULT false,
  profile_completion_status boolean DEFAULT false,
  verification_status boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  username text NOT NULL,
  first_name text,
  last_name text,
  date_of_birth date,
  gender text CHECK (gender = ANY (ARRAY['male'::text, 'female'::text, 'other'::text, 'prefer_not_to_say'::text])),
  education_level text CHECK (education_level = ANY (ARRAY['high_school'::text, 'diploma'::text, 'bachelor'::text, 'master'::text, 'phd'::text, 'other'::text])),
  employment_status text CHECK (employment_status = ANY (ARRAY['employed'::text, 'unemployed'::text, 'self_employed'::text, 'student'::text, 'retired'::text, 'other'::text])),
  profile_picture_url text,
  preferred_language text DEFAULT 'en'::text,
  timezone text DEFAULT 'Africa/Juba'::text,
  profile_completion_score integer DEFAULT 0,
  last_active_at timestamp with time zone DEFAULT now(),
  total_logins integer DEFAULT 0,
  profile_views integer DEFAULT 0,
  is_verified boolean DEFAULT false,
  verification_documents jsonb,
  social_links jsonb,
  emergency_contact jsonb,
  latitude numeric,
  longitude numeric,
  city text,
  state_province text,
  country text DEFAULT 'South Sudan'::text,
  postal_code text,
  location_accuracy text CHECK (location_accuracy = ANY (ARRAY['exact'::text, 'approximate'::text, 'city_only'::text])),
  service_radius_km integer DEFAULT 50,
  location_verified boolean DEFAULT false,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);